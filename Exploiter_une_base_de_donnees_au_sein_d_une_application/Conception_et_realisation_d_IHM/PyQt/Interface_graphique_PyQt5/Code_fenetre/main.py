from PyQt5 import QtCore, QtGui, QtWidgets
import sys, os, numpy, Bar

########################### FENETRE PRINCIPALE ###########################
class Ui_MainWindow(object):
    def setupUi(self, MainWindow):

########################### MAIN WINDOW SETUP ###########################

        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1400,800)
        MainWindow.setWindowFlags(QtCore.Qt.CustomizeWindowHint | QtCore.Qt.FramelessWindowHint)

        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.MinimumExpanding, QtWidgets.QSizePolicy.MinimumExpanding)

        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        self.main_layout = QtWidgets.QVBoxLayout(self.centralwidget)
        self.main_layout.setObjectName("main_layout")

        self.main_layout.addWidget(Bar.MyBar(MainWindow))

        self.main_layout.setContentsMargins(0,0,0,0)

########################### SELECTION PGCD / PRIME ###########################

        self.main_button_layout = QtWidgets.QHBoxLayout()
        self.main_button_layout.setSpacing(20)
        self.main_button_layout.setObjectName("main_button_layout")

        self.separator = QtWidgets.QFrame()
        self.separator.setFrameShape(QtWidgets.QFrame.HLine)
        self.separator.setLineWidth(5)
        self.separator.setStyleSheet("color : rgba(243, 67, 105, 255);")
        self.main_layout.addWidget(self.separator)

        self.pgcd_button = QtWidgets.QPushButton(self.centralwidget)
        self.pgcd_button.setObjectName("pgcd_button")
        self.pgcd_button.clicked.connect(self.page_1)
        self.main_button_layout.addWidget(self.pgcd_button)

        self.prime_button = QtWidgets.QPushButton(self.centralwidget)
        self.prime_button.setObjectName("prime_button")
        self.prime_button.clicked.connect(self.page_2)
        self.main_button_layout.addWidget(self.prime_button)

        self.main_layout.addLayout(self.main_button_layout)

        self.separator_2 = QtWidgets.QFrame()
        self.separator_2.setFrameShape(QtWidgets.QFrame.HLine)
        self.separator_2.setLineWidth(5)
        self.separator_2.setStyleSheet("color : rgba(63, 59, 146, 255);")
        self.main_layout.addWidget(self.separator_2)

        self.stacked = QtWidgets.QStackedWidget(self.centralwidget)
        self.stacked.setObjectName("stacked")

########################### WIDGET PGCD ###########################

        self.pgcd = QtWidgets.QWidget()
        self.pgcd.setObjectName("pgcd")

        self.pgcd_layout = QtWidgets.QVBoxLayout(self.pgcd)
        self.pgcd_layout.setObjectName("pgcd_layout")

        self.pgcd_title_label = QtWidgets.QLabel(self.pgcd)
        self.pgcd_title_label.setAlignment(QtCore.Qt.AlignCenter)
        self.pgcd_title_label.setObjectName("pgcd_title_label")
        self.pgcd_title_label.setStyleSheet("color : qlineargradient(spread:repeat, x1:0, y:0, x2:1, y2:1, stop:0 rgba(243, 67, 105, 255), stop:1 rgba(63, 59, 146, 255));")
        self.pgcd_layout.addWidget(self.pgcd_title_label)

        self.pgcd_util_layout = QtWidgets.QGridLayout()
        self.pgcd_util_layout.setContentsMargins(-1, 20, -1, -1)
        self.pgcd_util_layout.setSpacing(20)
        self.pgcd_util_layout.setObjectName("pgcd_util_layout")

        self.pgcd_a_label = QtWidgets.QLabel(self.pgcd)
        self.pgcd_a_label.setSizePolicy(sizePolicy)
        self.pgcd_a_label.setAlignment(QtCore.Qt.AlignCenter)
        self.pgcd_a_label.setObjectName("pgcd_a_label")
        self.pgcd_a_label.setStyleSheet("color : rgba(243, 67, 105, 255);")
        self.pgcd_util_layout.addWidget(self.pgcd_a_label, 0, 0, 1, 1)

        self.pgcd_a_edit = QtWidgets.QLineEdit(self.pgcd)
        self.pgcd_a_edit.setSizePolicy(sizePolicy)
        self.pgcd_a_edit.setAlignment(QtCore.Qt.AlignCenter)
        self.pgcd_a_edit.setObjectName("pgcd_a_edit")
        self.pgcd_a_edit.setValidator(QtGui.QIntValidator(1, 2147483647))
        self.pgcd_a_edit.textChanged.connect(self.check_pgcd_edit)
        self.pgcd_a_edit.setStyleSheet("color : rgba(243, 67, 105, 255);")
        self.pgcd_util_layout.addWidget(self.pgcd_a_edit, 0, 1, 1, 1)

        self.pgcd_b_label = QtWidgets.QLabel(self.pgcd)
        self.pgcd_b_label.setSizePolicy(sizePolicy)
        self.pgcd_b_label.setAlignment(QtCore.Qt.AlignCenter)
        self.pgcd_b_label.setObjectName("pgcd_b_label")
        self.pgcd_b_label.setStyleSheet("color : rgba(63, 59, 146, 255);")
        self.pgcd_util_layout.addWidget(self.pgcd_b_label, 1, 0, 1, 1)

        self.pgcd_b_edit = QtWidgets.QLineEdit(self.pgcd)
        self.pgcd_b_edit.setSizePolicy(sizePolicy)
        self.pgcd_b_edit.setAlignment(QtCore.Qt.AlignCenter)
        self.pgcd_b_edit.setObjectName("pgcd_b_edit")
        self.pgcd_b_edit.setValidator(QtGui.QIntValidator(1, 2147483647))
        self.pgcd_b_edit.textChanged.connect(self.check_pgcd_edit)
        self.pgcd_b_edit.setStyleSheet("color : rgba(63, 59, 146, 255);")
        self.pgcd_util_layout.addWidget(self.pgcd_b_edit, 1, 1, 1, 1)

        self.pgcd_result_label = QtWidgets.QLabel(self.pgcd)
        self.pgcd_result_label.setSizePolicy(sizePolicy)
        self.pgcd_result_label.setAlignment(QtCore.Qt.AlignCenter)
        self.pgcd_result_label.setObjectName("pgcd_result_label")
        self.pgcd_util_layout.addWidget(self.pgcd_result_label, 2, 0, 1, 1)

        self.pgcd_result_edit = QtWidgets.QLineEdit(self.pgcd)
        self.pgcd_result_edit.setEnabled(False)
        self.pgcd_result_edit.setSizePolicy(sizePolicy)
        self.pgcd_result_edit.setAlignment(QtCore.Qt.AlignCenter)
        self.pgcd_result_edit.setObjectName("pgcd_result_edit")
        self.pgcd_result_edit.setReadOnly(True)
        self.pgcd_util_layout.addWidget(self.pgcd_result_edit, 2, 1, 1, 1)

        self.pgcd_layout.addLayout(self.pgcd_util_layout)

        self.pgcd_clear_button = QtWidgets.QPushButton(self.centralwidget)
        self.pgcd_clear_button.setObjectName("pgcd_button")
        self.pgcd_clear_button.clicked.connect(self.pgcd_clear)
        self.pgcd_layout.addWidget(self.pgcd_clear_button)
        
        self.stacked.addWidget(self.pgcd)

########################### WIDGET PRIME ###########################

        self.prime = QtWidgets.QWidget()
        self.prime.setObjectName("prime")

        self.prime_layout = QtWidgets.QVBoxLayout(self.prime)
        self.prime_layout.setObjectName("prime_layout")

        self.prime_title_label = QtWidgets.QLabel(self.prime)
        self.prime_title_label.setAlignment(QtCore.Qt.AlignCenter)
        self.prime_title_label.setObjectName("prime_title_label")
        self.prime_title_label.setStyleSheet("color : qlineargradient(spread:repeat, x1:0, y:0, x2:1, y2:1, stop:0 rgba(243, 67, 105, 255), stop:1 rgba(63, 59, 146, 255));")
        self.prime_layout.addWidget(self.prime_title_label)

        self.prime_util_layout = QtWidgets.QGridLayout()
        self.prime_util_layout.setContentsMargins(0, 20, 0, 0)
        self.prime_util_layout.setSpacing(20)
        self.prime_util_layout.setObjectName("prime_util_layout")

        self.prime_nb_label = QtWidgets.QLabel(self.prime) 
        self.prime_nb_label.setSizePolicy(sizePolicy)
        self.prime_nb_label.setAlignment(QtCore.Qt.AlignCenter)
        self.prime_nb_label.setObjectName("prime_nb_label")
        self.prime_nb_label.setStyleSheet("color : rgba(63, 59, 146, 255);")
        self.prime_util_layout.addWidget(self.prime_nb_label, 0, 0, 1, 1)

        self.prime_nb_edit = QtWidgets.QLineEdit(self.prime)
        self.prime_nb_edit.setSizePolicy(sizePolicy)
        self.prime_nb_edit.setObjectName("prime_nb_edit")
        self.prime_nb_edit.setAlignment(QtCore.Qt.AlignCenter)
        self.prime_nb_edit.setValidator(QtGui.QIntValidator(1, 2147483647))
        self.prime_nb_edit.textChanged.connect(self.check_prime_edit)
        self.prime_nb_edit.setStyleSheet("color : rgba(63, 59, 146, 255);")
        self.prime_util_layout.addWidget(self.prime_nb_edit, 0, 1, 1, 1)

        self.prime_result_label = QtWidgets.QLabel(self.prime)
        self.prime_result_label.setSizePolicy(sizePolicy)
        self.prime_result_label.setAlignment(QtCore.Qt.AlignCenter)
        self.prime_result_label.setObjectName("prime_result_label")
        self.prime_util_layout.addWidget(self.prime_result_label, 1, 0, 1, 1)

        self.prime_result_edit = QtWidgets.QLineEdit(self.prime)
        self.prime_result_edit.setEnabled(False)
        self.prime_result_edit.setSizePolicy(sizePolicy)
        self.prime_result_edit.setObjectName("prime_result_edit")
        self.prime_result_edit.setAlignment(QtCore.Qt.AlignCenter)
        self.prime_result_edit.setReadOnly(True)
        self.prime_util_layout.addWidget(self.prime_result_edit, 1, 1, 1, 1)

        self.prime_layout.addLayout(self.prime_util_layout)

        self.prime_clear_button = QtWidgets.QPushButton(self.centralwidget)
        self.prime_clear_button.setObjectName("prime_clear_button")
        self.prime_clear_button.clicked.connect(self.prime_clear)
        self.prime_layout.addWidget(self.prime_clear_button)

        self.stacked.addWidget(self.prime)

########################### DIV ###########################

        self.main_layout.addWidget(self.stacked)
  
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        self.stacked.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)


########################### AFFICHAGE DES TEXTES ###########################
    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "PGCD & Prime"))
        self.pgcd_button.setText(_translate("MainWindow", "Plus Grand Commun Diviseur"))
        self.prime_button.setText(_translate("MainWindow", "Nombre Premier"))
        self.pgcd_title_label.setText(_translate("MainWindow", "Plus Grand Commun Diviseur"))
        self.pgcd_a_label.setText(_translate("MainWindow", "Nombre A :"))
        self.pgcd_b_label.setText(_translate("MainWindow", "Nombre B :"))
        self.pgcd_result_label.setText(_translate("MainWindow", "PGCD :"))
        self.pgcd_clear_button.setText(_translate("MainWindow", "Effacer"))
        self.prime_title_label.setText(_translate("MainWindow", "Nombres Premiers"))
        self.prime_result_label.setText(_translate("MainWindow", "Le nombre _"))
        self.prime_nb_label.setText(_translate("MainWindow", "Nombre :"))
        self.prime_clear_button.setText(_translate("MainWindow", "Effacer"))

########################### CHANGEMENT VERS PAGE 1 ###########################
    def page_1(self):
        self.stacked.setCurrentIndex(0)

########################### CHANGEMENT VERS PAGE 2 ###########################
    def page_2(self):
        self.stacked.setCurrentIndex(1)

########################### EFFACER CONTENU PGCD ###########################
    def pgcd_clear(self):
        
        self.pgcd_a_edit.clear()
        self.pgcd_b_edit.clear()
        self.pgcd_result_edit.clear()

########################### ACTION A CHAQUE MODIF DES ENTREES PGCD ###########################
    def check_pgcd_edit(self):
        self.pgcd_result_edit.clear()

        if self.pgcd_a_edit.text() and self.pgcd_b_edit.text():
            self.calcul_pgcd()

        else:
            self.pgcd_result_edit.setEnabled(False)

########################### CALCUL ET AFFICHAGE PGCD ###########################
    def calcul_pgcd(self):
        a = int(self.pgcd_a_edit.text())
        b = int(self.pgcd_b_edit.text())

        result = numpy.gcd(a, b)

        self.pgcd_result_edit.setEnabled(True)
        self.pgcd_result_edit.setText(str(result))

########################### EFFACER CONTENU PRIME ###########################
    def prime_clear(self):
        self.prime_nb_edit.clear()
        self.prime_result_edit.clear()

########################### ACTION A CHAQUE MODIF DE PRIME ###########################
    def check_prime_edit(self):
        self.prime_result_edit.clear()

        if self.prime_nb_edit.text():

            if self.calcul_prime():
                self.prime_result_label.setText(f"Le nombre {self.prime_nb_edit.text()}")
                self.prime_result_edit.setText("est premier")
                self.prime_result_edit.setStyleSheet("color : rgba(0, 255, 0, 255);")
                self.prime_result_edit.setEnabled(True)
                                                  
            else:
                self.prime_result_label.setText(f"Le nombre {self.prime_nb_edit.text()}")
                self.prime_result_edit.setText("n'est pas premier")
                self.prime_result_edit.setStyleSheet("color : rgba(255, 0, 0, 255);")
                self.prime_result_edit.setEnabled(True)

        else:
            self.prime_result_edit.setEnabled(False)
            self.prime_result_label.setText("Le nombre _")

########################### CALCUL SI PREMIER ###########################
    def calcul_prime(self):

        n = int(self.prime_nb_edit.text())

        if n == 1:
            return False
        i = 2
        while i*i <= n:
            if n % i == 0:
                return False
            i += 1
        return True

if __name__ == "__main__":
    app = QtWidgets.QApplication(sys.argv)

    QtCore.QDir.addSearchPath('Assets', os.path.join(os.path.dirname(os.path.abspath(__file__)), 'Assets'))

    app.setWindowIcon(QtGui.QIcon("Assets:Logo.png"))
    file = QtCore.QFile('Assets:Style.qss')
    file.open(QtCore.QFile.ReadOnly | QtCore.QFile.Text)
    app.setStyleSheet(str(file.readAll(), 'utf-8'))

    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
