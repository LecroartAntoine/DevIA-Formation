from flask import jsonify, Flask, request
from mysql import connector

def user_connection():

    try:
        connection = connector.connect(
            user='root',
            password='admin',
            host='fichiers-mysql-1',
            port='3306',
            database='DB_users'
        )

        cursor = connection.cursor(buffered = True)
        return (cursor, connection)
    except Exception as e:
        return (False, e)
    
def query_connection(database):
    try:
        connection = connector.connect(
            user='root',
            password='admin',
            host='fichiers-mysql-1',
            port='3306',
            database=database
        )
        cursor = connection.cursor()
        return (cursor, connection)
    except Exception as e:
        return (False, e)

def close_connection(cursor, connection):
    cursor.close()
    connection.close()

app = Flask(__name__)

@app.route("/login", methods=["POST"])
def login():
    form_data = {"username": request.json.get("username"), "password" : request.json.get("password")}
    query = "SELECT * FROM identifiants WHERE username = %s AND password = %s;"
    params = (form_data['username'], form_data['password'])

    cursor, connection = user_connection()

    if cursor:

        cursor.execute(query, params)
        results = cursor.fetchone()
        close_connection(cursor, connection)
    else:
        return jsonify({"error": f"Connexion impossible : {connection}", "GPT_token" : ""}), 400


    if not results:
        return jsonify({"error": "Invalid username or password", "GPT_token" : ""}), 400


    return jsonify({"GPT_token": "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"}), 200

@app.route('/query', methods=['POST'])
def post_user():

    args = request.json

    try:
        query = args['query']
        db = args["db"]

        cursor, connection = query_connection(db)
        if cursor:

            cursor.execute(query)

            if query.startswith("SELECT"):
                result = cursor.fetchall()

                result.insert(0, cursor.column_names)

                close_connection(cursor, connection)

                return  jsonify({"Query_result": result}), 200

            else:
                connection.commit()

                close_connection(cursor, connection)

                return  jsonify({"Query_result": "Query has been executed"}), 200
        else :
            return jsonify({"Query_result": "", "error": str(connection)}), 400

        

    except Exception as e:
        return jsonify({"Query_result": "", "error": str(e)}), 400

@app.route('/logs', methods=['POST'])
def post_user_log():

    args = request.json

    try:

        query = args['query']
        username = args['username']

        cursor, connection = query_connection("DB_users")
        if cursor:

            cursor.execute(f"SELECT id_user FROM identifiants WHERE (username = '{username}');")
            result = cursor.fetchall()

            if result :

                query = query.replace('%', str(result[0][0]))

                queries = query.split(';')

                for query in queries[:-1]:
                    query += ';'
                    cursor.execute(query)

                    connection.commit()

                close_connection(cursor, connection)

                return  jsonify({"Query_result": "Log uploaded"}), 200
            
            else :
                return  jsonify({"Query_result": "", "error": "Log upload failed"}), 400

        else :
            return jsonify({"Query_result": "", "error": str(connection)}), 400
            
    except Exception as e:
        return jsonify({"Query_result": "", "error": str(e)}), 400
    
@app.route('/give_opinion', methods=['POST'])
def post_user_opinion():

    args = request.json

    try:

        query = args['query']
        username = args['username']

        cursor, connection = query_connection("DB_users")
        if cursor:

            cursor.execute(f"SELECT id_user FROM identifiants WHERE (username = '{username}');")
            result = cursor.fetchall()

            if result :

                query = query.replace('%', str(result[0][0]))

                queries = query.split(';')

                for query in queries[:-1]:
                    query += ';'
                    cursor.execute(query)

                    connection.commit()

                close_connection(cursor, connection)

                return  jsonify({"Query_result": "Opinion uploaded"}), 200
            
            else :
                return  jsonify({"Query_result": "", "error": "Opinion upload failed"}), 400

        else :
            return jsonify({"Query_result": "", "error": str(connection)}), 400
            
    except Exception as e:
        return jsonify({"Query_result": "", "error": str(e)}), 400


app.run(host="0.0.0.0")